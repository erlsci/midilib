name: ci/cd

on:
  workflow_dispatch:
  push:
    branches: [ main, release/*]
  pull_request:
    branches: [ main, release/*]
  schedule:
  - cron: "17 3 * * *"
  
jobs:

  core-builds:
    name: Erlang ${{ matrix.otp_version }} build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        otp_version: ['27', '26', '25', '24']

    steps:
    - uses: actions/checkout@v4
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp_version }}
        rebar3-version: '3.22'
    - name: Check rebar3 Version
      run: DEBUG=1 rebar3 --version
    - name: Compile
      run: rebar3 compile
    - name: Xref Checks
      run: rebar3 xref
    #- name: Dialyzer
    #  run: rebar3 dialyzer
    - name: Proper Tests
      run: rebar3 as test do compile, proper --regressions
    # - name: Run Tests
    #   run: rebar3 ct -c
    - name: Run Unit Tests
      run: rebar3 as test eunit
    # - name: Test Coverage
    #   run: rebar3 as test do proper -c, cover -v --min_coverage=0
    - name: Notify CI/CD Slack Channel
      uses: innocarpe/actions-slack@v1
      with:
        status: ${{ job.status }}
        success_text: '✅ Build for ${{ github.repository }} on LFE/OTP ${{ matrix.otp_version }} succeeded! 😄🌈🐴🚢🐿 (commit id: ${{ github.sha }})'
        failure_text: '❌ Build for ${{ github.repository }} on LFE/OTP ${{ matrix.otp_version }} failed! 🤬💣🔥🚒 (commit id: ${{ github.sha }})'
        cancelled_text: '🚧 Build for ${{ github.repository }} on LFE/OTP ${{ matrix.otp_version }} was cancelled ... 😯🦡 (commit id: ${{ github.sha }})'
      env:
        GITHUB_TOKEN: ${{ secrets.CICD_BOT_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.CICD_BOT_WEBHOOK }}
      if: always()

  older-builds:
    name: Erlang ${{ matrix.otp_version }} build (old)
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        otp_version: ['23', '22', '21']

    steps:
    - uses: actions/checkout@v4
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{ matrix.otp_version }}
        rebar3-version: '3.15'
    - name: Install Deps
      run: sudo apt-get update && sudo apt-get install -y gnuplot
    - name: Compile
      run: rebar3 compile
    - name: Xref Checks
      run: rebar3 xref
    #- name: Dialyzer
    #  run: rebar3 dialyzer
    - name: Compile Tests
      run: rebar3 as test compile
    - name: Proper Tests
      run: rebar3 as test proper --regressions
    # - name: Run Tests
    #   run: rebar3 ct -c
    - name: Run Unit Tests
      run: rebar3 as test eunit
    # - name: Test Coverage
    #   run: rebar3 as test do proper -c, cover -v --min_coverage=0
